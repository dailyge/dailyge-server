def env = System.getenv("ENV")
def skipJib = System.getenv("SKIP_JIB")

if (env != null && (skipJib != null && skipJib == "false")) {
    def ecrUri = env == "prod" ? System.getenv("PROD_ECR_URI") : System.getenv("DEV_ECR_URI")
    def port = env == "prod" ? "8080" : "8081"
    def profile = env == "prod" ? "prod" : "dev"
    def label = "dailyge-api-${profile}".toString()
    def imageTag = System.getenv("IMAGE_TAG")
    jib {
        from {
            image = "openjdk:17-jdk-slim"
        }
        to {
            image = "${ecrUri}:${imageTag}".toString()
            credHelper = "ecr-login"
        }
        container {
            ports = [port]
            labels = [server: label]
            jvmFlags = [
                    "-Dspring.profiles.active=${profile}".toString(),
                    "-Dfile.encoding=UTF-8",
                    "-Dlog4j2.formatMsgNoLookups=true",
                    "-XX:+PrintFlagsFinal",
                    "--add-opens=java.base/java.time=ALL-UNNAMED",
                    "-XX:+TieredCompilation",
                    "-XX:InitialCodeCacheSize=32m",
                    "-XX:+UseStringDeduplication",
                    "-XX:CICompilerCount=4",
                    "-Xms512m",
                    "-Xmx768m",
                    "-XX:ParallelGCThreads=2",
                    "-XX:MaxGCPauseMillis=200",
                    "-XX:InitiatingHeapOccupancyPercent=40",
                    "-XX:+UseG1GC",
                    "-XX:+HeapDumpOnOutOfMemoryError",
                    "-XX:HeapDumpPath=/var/log/app/heapdump.hprof",
                    "-Xss512k",
                    "-XX:+UseCompressedOops"
            ]
            environment = [
                    "ENCRYPTOR_KEY": System.getenv("ENCRYPTOR_KEY")
            ]
            creationTime = "USE_CURRENT_TIMESTAMP"
            allowInsecureRegistries = true
        }
    }
}
