plugins {
    id("java-test-fixtures")
    id("io.spring.dependency-management")
    id("org.springframework.boot") apply false
    id("org.asciidoctor.jvm.convert") apply false
}

dependencies {
    // JPA
    api("org.springframework.boot:spring-boot-starter-data-jpa")
    api("com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta")

    // MySQL
    runtimeOnly("mysql:mysql-connector-java:${property("mysqlVersion")}")

    // AnnotationProcessor
    annotationProcessor("com.querydsl:querydsl-apt:${queryDslVersion}:jakarta")
    annotationProcessor("jakarta.annotation:jakarta.annotation-api")
    annotationProcessor("jakarta.persistence:jakarta.persistence-api")
}

def querydslDir = "src/main/generated"

sourceSets {
    main.java.srcDirs += [querydslDir]
}

tasks.withType(JavaCompile).configureEach {
    options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

clean.doLast {
    file(querydslDir).deleteDir()
}

jar {
    enabled = true
}

bootJar {
    enabled = false
}
