plugins {
    id("org.asciidoctor.jvm.convert")
}

configurations {
    asciidoctorExt
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

apply(from: "${rootDir}/jib/dailyge-api/jib.gradle")

dependencies {
    implementation(project(":storage:rdb"))
    implementation(project(":support"))

    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-security")
    implementation("org.springframework.boot:spring-boot-starter-oauth2-client")
    implementation("org.springframework.boot:spring-boot-starter-validation")
    implementation("org.springframework.boot:spring-boot-starter-data-redis")
    implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")
    implementation("io.jsonwebtoken:jjwt:0.9.1")
    implementation("javax.xml.bind:jaxb-api:2.3.1")

    testImplementation("org.springframework.restdocs:spring-restdocs-restassured")
    testImplementation("org.springframework.restdocs:spring-restdocs-mockmvc")
    testImplementation("org.testcontainers:testcontainers")
    testImplementation("org.testcontainers:junit-jupiter")
    testImplementation("org.testcontainers:mysql")

    asciidoctorExt("org.springframework.restdocs:spring-restdocs-asciidoctor")
}

springBoot {
    mainClassName = "project.dailyge.app.DailygeApplication"
}

ext {
    snippetsDir = file("build/generated-snippets")
}

test {
    outputs.dir snippetsDir
}

asciidoctor {
    attributes "snippets": snippetsDir
    inputs.dir snippetsDir
    dependsOn test
}

tasks.register("copyDocument", Copy) {
    dependsOn asciidoctor
    from file("build/docs/asciidoc")
    into file("src/main/resources/static/docs")
}

build {
    dependsOn copyDocument
}

bootJar {
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}/html5") {
        into "static/docs"
    }
}
