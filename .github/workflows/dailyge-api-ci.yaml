name: Dailyge-Api Static Analysis

on:
  pull_request:
    branches: [ dev, prod ]
    paths:
      - dailyge-api/**
      - storage/**
      - support/**

env:
  ENV: dev
  SKIP_JIB: true
  SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  ENCRYPTOR_KEY: ${{ secrets.ENCRYPTOR_KEY }}
  AWS_REGION: ap-northeast-2

jobs:
  static_analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true
          token: ${{ secrets.SUBMODULE_TOKEN }}

      - name: Update submodules
        run: |
          git submodule sync --recursive
          git submodule update --init --recursive --remote

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', '**/build.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
            ${{ runner.os }}-gradle-

      - name: Run Static Analysis
        run: ./gradlew dailyge-api:pmdMain pmdTest checkstyleMain checkstyleTest
        
      - name: Test and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew dailyge-api:build sonar -PskipJib=true

  notify_slack:
    runs-on: ubuntu-latest
    needs: [ static_analysis ]
    if: always()
    steps:
      - name: Notify Static Analysis Result to Slack - Success
        if: ${{ needs.static_analysis.result == 'success' }}
        uses: 8398a7/action-slack@v3
        with:
          status: success
          color: "good"
          text: |
            :white_check_mark: *정적 분석을 성공적으로 완료했습니다.*
            *Requestor:* ${{ github.actor }}
            *Reviewers:* ${{ join(github.event.pull_request.requested_reviewers.*.login, ', ') }}
            *Link:* <${{ github.event.pull_request.html_url }}|PR>
            *Env:* ${{ env.ENV }}
          username: "PR_Bot"
          icon_emoji: ":robot_face:"
          channel: "pr"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.PR_WEBHOOK_URL }}

      - name: Notify Static Analysis Result to Slack - Failure
        if: ${{ needs.static_analysis.result == 'failure' }}
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          color: "danger"
          text: |
            :x: *정적 분석에 실패했습니다.*
            *Requestor:* ${{ github.actor }}
            *Reviewers:* ${{ join(github.event.pull_request.requested_reviewers.*.login, ', ') }}
            *Link:* <${{ github.event.pull_request.html_url }}|PR>
            *Env:* ${{ env.ENV }}
          username: "PR_Bot"
          icon_emoji: ":robot_face:"
          channel: "pr"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.PR_WEBHOOK_URL }}

      - name: Notify Static Analysis Result to Slack - Cancelled
        if: cancelled()
        uses: 8398a7/action-slack@v3
        with:
          status: cancelled
          color: "warning"
          text: |
            :warning: *정적 분석이 취소되었습니다.*
            *Requestor:* ${{ github.actor }}
            *Reviewers:* ${{ join(github.event.pull_request.requested_reviewers.*.login, ', ') }}
            *Link:* <${{ github.event.pull_request.html_url }}|PR>
            *Env:* ${{ env.ENV }}
          username: "PR_Bot"
